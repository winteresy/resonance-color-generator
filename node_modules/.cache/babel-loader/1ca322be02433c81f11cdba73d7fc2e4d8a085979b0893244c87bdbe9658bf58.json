{"ast":null,"code":"var _jsxFileName = \"/Users/alicegurova/gradient-generator/src/Sketch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sketch = ({\n  image,\n  stripes,\n  randomSeed\n}) => {\n  _s();\n  const sketchRef = useRef();\n  useEffect(() => {\n    const sketch = p => {\n      let img;\n      p.preload = () => {\n        if (image) {\n          img = p.loadImage(image);\n        }\n      };\n      p.setup = () => {\n        p.createCanvas(600, 400);\n        p.noLoop();\n        drawSketch();\n      };\n      const drawSketch = () => {\n        p.clear();\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50);\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n          p.filter(p.BLUR, 8); // Применение размытия прямо здесь\n        }\n      };\n\n      p.redrawSketch = () => {\n        drawSketch();\n      };\n    };\n    let myp5 = new p5(sketch, sketchRef.current);\n    return () => {\n      myp5.remove();\n    };\n  }, [image, stripes, randomSeed]);\n  useEffect(() => {\n    if (sketchRef.current) {\n      sketchRef.current.childNodes[0].redrawSketch();\n    }\n  }, [stripes, randomSeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sketchRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_s(Sketch, \"8UCRYo5wjCDgHjKs/NuuqUNUdtw=\");\n_c = Sketch;\nexport default Sketch;\nvar _c;\n$RefreshReg$(_c, \"Sketch\");","map":{"version":3,"names":["React","useEffect","useRef","p5","jsxDEV","_jsxDEV","Sketch","image","stripes","randomSeed","_s","sketchRef","sketch","p","img","preload","loadImage","setup","createCanvas","noLoop","drawSketch","clear","loadPixels","y","height","stripeHeight","random","posY","colorIndex","parseInt","map","c","get","width","fill","noStroke","rect","filter","BLUR","redrawSketch","myp5","current","remove","childNodes","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alicegurova/gradient-generator/src/Sketch.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport p5 from 'p5';\n\nconst Sketch = ({ image, stripes, randomSeed }) => {\n  const sketchRef = useRef();\n\n  useEffect(() => {\n    const sketch = (p) => {\n      let img;\n\n      p.preload = () => {\n        if (image) {\n          img = p.loadImage(image);\n        }\n      };\n\n      p.setup = () => {\n        p.createCanvas(600, 400);\n        p.noLoop();\n        drawSketch();\n      };\n\n      const drawSketch = () => {\n        p.clear();\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50);\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n          p.filter(p.BLUR, 8); // Применение размытия прямо здесь\n        }\n      };\n\n      p.redrawSketch = () => {\n        drawSketch();\n      };\n    };\n\n    let myp5 = new p5(sketch, sketchRef.current);\n\n    return () => {\n      myp5.remove();\n    };\n  }, [image, stripes, randomSeed]);\n\n  useEffect(() => {\n    if (sketchRef.current) {\n      sketchRef.current.childNodes[0].redrawSketch();\n    }\n  }, [stripes, randomSeed]);\n\n  return <div ref={sketchRef}></div>;\n};\n\nexport default Sketch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}