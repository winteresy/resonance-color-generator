{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport p5 from 'p5';\nconst Sketch = ({\n  image,\n  stripes,\n  randomSeed,\n  onSave\n}) => {\n  _s();\n  const sketchRef = useRef();\n  useEffect(() => {\n    let myp5;\n    const sketch = p => {\n      let img;\n      p.preload = () => {\n        if (image) {\n          img = p.loadImage(image);\n        }\n      };\n      p.setup = () => {\n        p.createCanvas(600, 698);\n        p.noLoop();\n      };\n      p.draw = () => {\n        p.clear();\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50);\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n          p.filter(p.BLUR, 10);\n        }\n      };\n      myp5 = p;\n    };\n    if (onSave) {\n      onSave(() => {\n        if (myp5 && myp5._renderer) {\n          // Проверка на существование экземпляра и его рендерера\n          myp5.saveCanvas('gradient_image', 'png');\n        } else {\n          console.error('Canvas is not ready to be saved.');\n        }\n      });\n    }\n    myp5 = new p5(sketch, sketchRef.current);\n    return () => {\n      myp5.remove();\n    };\n  }, []);\n  useEffect(() => {\n    if (sketchRef.current) {\n      sketchRef.current.redraw();\n    }\n  }, [randomSeed, stripes, image]);\n};\n_s(Sketch, \"8UCRYo5wjCDgHjKs/NuuqUNUdtw=\");\n_c = Sketch;\nexport default Sketch;\nvar _c;\n$RefreshReg$(_c, \"Sketch\");","map":{"version":3,"names":["React","useEffect","useRef","p5","Sketch","image","stripes","randomSeed","onSave","_s","sketchRef","myp5","sketch","p","img","preload","loadImage","setup","createCanvas","noLoop","draw","clear","loadPixels","y","height","stripeHeight","random","posY","colorIndex","parseInt","map","c","get","width","fill","noStroke","rect","filter","BLUR","_renderer","saveCanvas","console","error","current","remove","redraw","_c","$RefreshReg$"],"sources":["/Users/alicegurova/gradient-generator/src/Sketch.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport p5 from 'p5';\n\nconst Sketch = ({ image, stripes, randomSeed, onSave }) => {\n  const sketchRef = useRef();\n\n  useEffect(() => {\n    let myp5;\n    const sketch = (p) => {\n      let img;\n\n      p.preload = () => {\n        if (image) {\n          img = p.loadImage(image);\n        }\n      };\n\n      p.setup = () => {\n        p.createCanvas(600, 698);\n        p.noLoop();\n      };\n\n      p.draw = () => {\n        p.clear();\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50);\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n          p.filter(p.BLUR, 10);\n        }\n      };\n\n      myp5 = p;\n    };\n\n\n    if (onSave) {\n      onSave(() => {\n        if (myp5 && myp5._renderer) { // Проверка на существование экземпляра и его рендерера\n          myp5.saveCanvas('gradient_image', 'png');\n        } else {\n          console.error('Canvas is not ready to be saved.');\n        }\n      });\n    }\n\n    myp5 = new p5(sketch, sketchRef.current);\n\n    return () => {\n      myp5.remove();\n    };\n  }, []);\n  \n  useEffect(() => {\n    if (sketchRef.current) {\n      sketchRef.current.redraw();\n    }\n  }, [randomSeed, stripes, image]);\n}\n\nexport default Sketch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,EAAE,MAAM,IAAI;AAEnB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAMC,SAAS,GAAGR,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI;IACR,MAAMC,MAAM,GAAIC,CAAC,IAAK;MACpB,IAAIC,GAAG;MAEPD,CAAC,CAACE,OAAO,GAAG,MAAM;QAChB,IAAIV,KAAK,EAAE;UACTS,GAAG,GAAGD,CAAC,CAACG,SAAS,CAACX,KAAK,CAAC;QAC1B;MACF,CAAC;MAEDQ,CAAC,CAACI,KAAK,GAAG,MAAM;QACdJ,CAAC,CAACK,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC;QACxBL,CAAC,CAACM,MAAM,CAAC,CAAC;MACZ,CAAC;MAEDN,CAAC,CAACO,IAAI,GAAG,MAAM;QACbP,CAAC,CAACQ,KAAK,CAAC,CAAC;QACTR,CAAC,CAACN,UAAU,CAACA,UAAU,CAAC;QACxB,IAAIO,GAAG,EAAE;UACPA,GAAG,CAACQ,UAAU,CAAC,CAAC;UAChB,IAAIC,CAAC,GAAG,CAAC;UACT,OAAOA,CAAC,GAAGV,CAAC,CAACW,MAAM,EAAE;YACnB,IAAIC,YAAY,GAAGZ,CAAC,CAACa,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;YACnC,IAAIC,IAAI,GAAGJ,CAAC,GAAGE,YAAY;YAC3B,IAAIG,UAAU,GAAGC,QAAQ,CAAChB,CAAC,CAACiB,GAAG,CAACH,IAAI,EAAE,CAAC,EAAErB,OAAO,EAAE,CAAC,EAAEQ,GAAG,CAACU,MAAM,CAAC,CAAC;YACjE,IAAIO,CAAC,GAAGjB,GAAG,CAACkB,GAAG,CAACH,QAAQ,CAACf,GAAG,CAACmB,KAAK,GAAG,CAAC,CAAC,EAAEL,UAAU,CAAC;YACpDf,CAAC,CAACqB,IAAI,CAACH,CAAC,CAAC;YACTlB,CAAC,CAACsB,QAAQ,CAAC,CAAC;YACZtB,CAAC,CAACuB,IAAI,CAAC,CAAC,EAAEb,CAAC,EAAEV,CAAC,CAACoB,KAAK,EAAER,YAAY,CAAC;YACnCF,CAAC,IAAIE,YAAY;UACnB;UACAZ,CAAC,CAACwB,MAAM,CAACxB,CAAC,CAACyB,IAAI,EAAE,EAAE,CAAC;QACtB;MACF,CAAC;MAED3B,IAAI,GAAGE,CAAC;IACV,CAAC;IAGD,IAAIL,MAAM,EAAE;MACVA,MAAM,CAAC,MAAM;QACX,IAAIG,IAAI,IAAIA,IAAI,CAAC4B,SAAS,EAAE;UAAE;UAC5B5B,IAAI,CAAC6B,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC;QAC1C,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;QACnD;MACF,CAAC,CAAC;IACJ;IAEA/B,IAAI,GAAG,IAAIR,EAAE,CAACS,MAAM,EAAEF,SAAS,CAACiC,OAAO,CAAC;IAExC,OAAO,MAAM;MACXhC,IAAI,CAACiC,MAAM,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,CAACiC,OAAO,EAAE;MACrBjC,SAAS,CAACiC,OAAO,CAACE,MAAM,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACtC,UAAU,EAAED,OAAO,EAAED,KAAK,CAAC,CAAC;AAClC,CAAC;AAAAI,EAAA,CAjEKL,MAAM;AAAA0C,EAAA,GAAN1C,MAAM;AAmEZ,eAAeA,MAAM;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}