{"ast":null,"code":"var _jsxFileName = \"/Users/alicegurova/gradient-generator/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [stripes, setStripes] = useState(10);\n  const [randomSeed, setRandomSeed] = useState(Math.random());\n  const regenerate = () => {\n    setRandomSeed(Math.random());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ImageUploader, {\n      onImageUpload: setImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StripesControl, {\n      stripes: stripes,\n      onChange: setStripes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      image: image,\n      stripes: stripes,\n      randomSeed: randomSeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveCanvas(),\n      children: \"Save Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: regenerate,\n      children: \"Regenerate Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  function saveCanvas() {\n    const canvas = document.querySelector('canvas');\n    if (canvas) {\n      canvas.toBlob(blob => {\n        const link = document.createElement('a');\n        link.download = 'gradient_stripes.png';\n        link.href = URL.createObjectURL(blob);\n        link.click();\n        URL.revokeObjectURL(link.href);\n      });\n    }\n  }\n};\n_s(App, \"4k05RWaACaIM3XEegWDpNdJZIts=\");\n_c = App;\nconst ImageUploader = ({\n  onImageUpload\n}) => {\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const imgFile = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => onImageUpload(e.target.result);\n      reader.readAsDataURL(imgFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: handleImageChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ImageUploader;\nconst StripesControl = ({\n  stripes,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"range\",\n    min: \"2\",\n    max: \"100\",\n    value: stripes,\n    onChange: e => onChange(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c3 = StripesControl;\nconst Canvas = ({\n  image,\n  stripes,\n  randomSeed\n}) => {\n  _s2();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const sketch = p => {\n      let img;\n      p.setup = () => {\n        p.createCanvas(600, 400);\n        if (image) {\n          img = p.loadImage(image, () => p.redraw());\n        }\n      };\n      p.draw = () => {\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50); // случайная высота в пределах от 10 до 50\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n        }\n      };\n    };\n    new p5(sketch, canvasRef.current);\n  }, [image, stripes, randomSeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s2(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c4 = Canvas;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ImageUploader\");\n$RefreshReg$(_c3, \"StripesControl\");\n$RefreshReg$(_c4, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","p5","jsxDEV","_jsxDEV","App","_s","image","setImage","stripes","setStripes","randomSeed","setRandomSeed","Math","random","regenerate","children","ImageUploader","onImageUpload","fileName","_jsxFileName","lineNumber","columnNumber","StripesControl","onChange","Canvas","onClick","saveCanvas","canvas","document","querySelector","toBlob","blob","link","createElement","download","href","URL","createObjectURL","click","revokeObjectURL","_c","handleImageChange","event","target","files","imgFile","reader","FileReader","onload","e","result","readAsDataURL","type","_c2","min","max","value","_c3","_s2","canvasRef","sketch","p","img","setup","createCanvas","loadImage","redraw","draw","loadPixels","y","height","stripeHeight","posY","colorIndex","parseInt","map","c","get","width","fill","noStroke","rect","current","ref","_c4","$RefreshReg$"],"sources":["/Users/alicegurova/gradient-generator/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\n\nconst App = () => {\n  const [image, setImage] = useState(null);\n  const [stripes, setStripes] = useState(10);\n  const [randomSeed, setRandomSeed] = useState(Math.random());\n\n  const regenerate = () => {\n    setRandomSeed(Math.random());\n  };\n\n  return (\n    <div>\n      <ImageUploader onImageUpload={setImage} />\n      <StripesControl stripes={stripes} onChange={setStripes} />\n      <Canvas image={image} stripes={stripes} randomSeed={randomSeed} />\n      <button onClick={() => saveCanvas()}>Save Image</button>\n      <button onClick={regenerate}>Regenerate Colors</button>\n    </div>\n  );\n\n  function saveCanvas() {\n    const canvas = document.querySelector('canvas');\n    if (canvas) {\n      canvas.toBlob(blob => {\n        const link = document.createElement('a');\n        link.download = 'gradient_stripes.png';\n        link.href = URL.createObjectURL(blob);\n        link.click();\n        URL.revokeObjectURL(link.href);\n      });\n    }\n  }\n};\n\nconst ImageUploader = ({ onImageUpload }) => {\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const imgFile = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => onImageUpload(e.target.result);\n      reader.readAsDataURL(imgFile);\n    }\n  };\n\n  return <input type=\"file\" onChange={handleImageChange} />;\n};\n\nconst StripesControl = ({ stripes, onChange }) => {\n  return (\n    <input\n      type=\"range\"\n      min=\"2\"\n      max=\"100\"\n      value={stripes}\n      onChange={e => onChange(e.target.value)}\n    />\n  );\n};\n\nconst Canvas = ({ image, stripes, randomSeed }) => {\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    const sketch = p => {\n      let img;\n\n      p.setup = () => {\n        p.createCanvas(600, 400);\n        if (image) {\n          img = p.loadImage(image, () => p.redraw());\n        }\n      };\n\n      p.draw = () => {\n        p.randomSeed(randomSeed);\n        if (img) {\n          img.loadPixels();\n          let y = 0;\n          while (y < p.height) {\n            let stripeHeight = p.random(10, 50); // случайная высота в пределах от 10 до 50\n            let posY = y / stripeHeight;\n            let colorIndex = parseInt(p.map(posY, 0, stripes, 0, img.height));\n            let c = img.get(parseInt(img.width / 2), colorIndex);\n            p.fill(c);\n            p.noStroke();\n            p.rect(0, y, p.width, stripeHeight);\n            y += stripeHeight;\n          }\n        }\n      };\n    };\n\n    new p5(sketch, canvasRef.current);\n  }, [image, stripes, randomSeed]);\n\n  return <div ref={canvasRef}></div>;\n};\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}